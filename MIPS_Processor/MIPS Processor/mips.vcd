$date
	Thu Jul 13 04:18:07 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var reg 1 ! clk1 $end
$var reg 1 " clk2 $end
$var integer 32 # k [31:0] $end
$scope module mips $end
$var wire 1 $ clk1 $end
$var wire 1 % clk2 $end
$var reg 32 & EX_MEM_ALUOut [31:0] $end
$var reg 32 ' EX_MEM_B [31:0] $end
$var reg 32 ( EX_MEM_IR [31:0] $end
$var reg 1 ) EX_MEM_cond $end
$var reg 3 * EX_MEM_type [2:0] $end
$var reg 1 + HALTED $end
$var reg 32 , ID_EX_A [31:0] $end
$var reg 32 - ID_EX_B [31:0] $end
$var reg 32 . ID_EX_IR [31:0] $end
$var reg 32 / ID_EX_Imm [31:0] $end
$var reg 32 0 ID_EX_NPC [31:0] $end
$var reg 3 1 ID_EX_type [2:0] $end
$var reg 32 2 IF_ID_IR [31:0] $end
$var reg 32 3 IF_ID_NPC [31:0] $end
$var reg 32 4 MEM_WB_ALUOut [31:0] $end
$var reg 32 5 MEM_WB_IR [31:0] $end
$var reg 32 6 MEM_WB_LMD [31:0] $end
$var reg 3 7 MEM_WB_type [2:0] $end
$var reg 32 8 PC [31:0] $end
$var reg 1 9 TAKEN_BRANCH $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
09
b0 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
0+
bx *
x)
bx (
bx '
bx &
0%
0$
b100000 #
0"
0!
$end
#5
1!
1$
#7
b1 8
b1 3
b101000000000010000000000001010 2
#10
0!
0$
#15
b0 ,
1"
1%
#17
b1 1
b1010 /
b101000000000010000000000001010 .
b1 0
b1 -
#20
0"
0%
#25
1!
1$
#27
b1010 &
b101000000000010000000000001010 (
b1 *
b10 8
b10 3
b101000000000100000000000010100 2
#30
0!
0$
#35
1"
1%
#37
b1010 4
b101000000000010000000000001010 5
b1 7
b10100 /
b101000000000100000000000010100 .
b10 0
b10 -
#40
0"
0%
#45
1!
1$
#47
b11 8
b11 3
b101000000000110000000000011001 2
b10100 &
b101000000000100000000000010100 (
#50
0!
0$
#55
1"
1%
#57
b11001 /
b101000000000110000000000011001 .
b11 0
b11 -
b10100 4
b101000000000100000000000010100 5
#60
0"
0%
#65
1!
1$
#67
b11001 &
b101000000000110000000000011001 (
b100 8
b100 3
b1100111001110111100000000000 2
#70
0!
0$
#75
1"
1%
#77
b11001 4
b101000000000110000000000011001 5
b0 1
b111100000000000 /
b1100111001110111100000000000 .
b100 0
b111 -
b111 ,
#80
0"
0%
#85
1!
1$
#87
b101 8
b101 3
b111 &
b1100111001110111100000000000 (
b0 *
#90
0!
0$
#95
1"
1%
#97
b101 0
b111 4
b1100111001110111100000000000 5
b0 7
#100
0"
0%
#105
1!
1$
#107
b110 8
b110 3
b1000100010000000000000 2
#110
0!
0$
#115
1"
1%
#117
b10000000000000 /
b1000100010000000000000 .
b110 0
b10100 -
b1010 ,
#120
0"
0%
#125
1!
1$
#127
b111 8
b111 3
b1100111001110111100000000000 2
b11110 &
b1000100010000000000000 (
#130
0!
0$
#135
1"
1%
#137
b111100000000000 /
b1100111001110111100000000000 .
b111 0
b111 -
b111 ,
b11110 4
b1000100010000000000000 5
#140
0"
0%
#145
1!
1$
#147
b111 &
b1100111001110111100000000000 (
b1000 8
b1000 3
b100000110010100000000000 2
#150
0!
0$
#155
1"
1%
#157
b111 4
b1100111001110111100000000000 5
b10100000000000 /
b100000110010100000000000 .
b1000 0
b11001 -
b11110 ,
#160
0"
0%
#165
1!
1$
#167
b1001 8
b1001 3
b11111100000000000000000000000000 2
b110111 &
b100000110010100000000000 (
#170
0!
0$
#175
b0 -
b0 ,
1"
1%
#177
b101 1
b0 /
b11111100000000000000000000000000 .
b1001 0
b110111 4
b100000110010100000000000 5
#180
0"
0%
#185
1!
1$
#187
b11111100000000000000000000000000 (
b101 *
b1010 8
b1010 3
bx 2
#190
0!
0$
#195
1"
1%
#197
b11111100000000000000000000000000 5
b101 7
bx /
bx .
b1010 0
bx -
bx ,
#200
0"
0%
#205
1!
1$
#207
b1011 8
b1011 3
bx (
1+
#210
0!
0$
#215
1"
1%
#220
0"
0%
#225
1!
1$
#230
0!
0$
#235
1"
1%
#240
0"
0%
#245
1!
1$
#250
0!
0$
#255
1"
1%
#260
0"
0%
#265
1!
1$
#270
0!
0$
#275
1"
1%
#280
0"
0%
b110 #
